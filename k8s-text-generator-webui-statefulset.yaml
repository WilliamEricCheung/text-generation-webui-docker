apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: text-generation-webui
  namespace: llama
spec:
  serviceName: "text-generation-webui"
  replicas: 1
  selector:
    matchLabels:
      app: text-generation-webui # has to match .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: text-generation-webui # has to match .spec.selector.matchLabels
    spec:
      containers:
        - name: text-generation-webui
          image: atinoda/text-generation-webui:base-nvidia # ref: https://hub.docker.com/r/atinoda/text-generation-webui
          ports:
            - containerPort: 7860 # Web UI port
            - containerPort: 5000 # API port
            - containerPort: 5005 # Streaming port
          env:
            - name: EXTRA_LAUNCH_ARGS
              value: "--listen --verbose --api --extensions api --gpus all"
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: rook-ceph-admin-keyring
                  key: keyring
          volumeMounts:
            # - name: llm-data-pvc
            #   mountPath: /app/characters
            #   subPath: characters
            - name: llm-data-pvc
              mountPath: /app/loras
              subPath: loras
            - name: llm-data-pvc
              mountPath: /app/models
              subPath: models
            # - name: llm-data-pvc
            #   mountPath: /app/presets
            #   subPath: presets
            # - name: llm-data-pvc
            #   mountPath: /app/prompts
            #   subPath: prompts
            # - name: llm-data-pvc
            #   mountPath: /app/training
            #   subPath: training
            - name: secret-volume
              mountPath: /etc/secret
      volumes:
        - name: llm-data-pvc
          persistentVolumeClaim:
            claimName: llm-data-pvc
        - name: secret-volume
          secret:
            secretName: rook-ceph-admin-keyring
